#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–õ–æ–∫–∞–ª—å–Ω—ã–π HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏

–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ CORS –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ API
- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–¥–Ω–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π (SPA)
- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤
- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–µ—Ç–µ–≤—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞
- –ë–æ–ª–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π –≤—ã–≤–æ–¥
"""

import http.server
import socketserver
import os
import sys
import webbrowser
import socket
from pathlib import Path
from datetime import datetime
from urllib.parse import unquote

class DevRequestHandler(http.server.SimpleHTTPRequestHandler):
    """–ö–∞—Å—Ç–æ–º–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏"""
    
    # –í–∫–ª—é—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    verbose = True
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ CORS
    cors_enabled = True
    cors_headers = {
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',
        'Access-Control-Allow-Headers': 'Content-Type',
    }
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è SPA (–≤–æ–∑–≤—Ä–∞—â–∞—Ç—å index.html –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø—É—Ç–µ–π)
    spa_mode = False
    
    def end_headers(self):
        """–î–æ–±–∞–≤–ª—è–µ–º CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∫ –∫–∞–∂–¥–æ–º—É –æ—Ç–≤–µ—Ç—É"""
        if self.cors_enabled:
            for key, value in self.cors_headers.items():
                self.send_header(key, value)
        super().end_headers()
    
    def do_OPTIONS(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ CORS preflight –∑–∞–ø—Ä–æ—Å–æ–≤"""
        self.send_response(204)
        self.end_headers()
    
    def log_request(self, code='-', size='-'):
        """–ö–∞—Å—Ç–æ–º–∏–∑–∏—Ä—É–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤"""
        if self.verbose:
            timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
            client_ip = self.client_address[0]
            method = self.command
            path = unquote(self.path)
            
            print(f"[{timestamp}] {client_ip} - {method} {path} -> {code}")

def get_local_ips():
    """–ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ª–æ–∫–∞–ª—å–Ω—ã—Ö IP-–∞–¥—Ä–µ—Å–æ–≤"""
    ips = ['localhost']
    try:
        hostname = socket.gethostname()
        ips.append(hostname)
        ips.extend(
            addr for addr in 
            socket.gethostbyname_ex(socket.gethostname())[2] 
            if not addr.startswith('127.')
        )
    except:
        pass
    return ips

def find_free_port(start_port=3000, max_attempts=100):
    """–ù–∞—Ö–æ–¥–∏–º —Å–≤–æ–±–æ–¥–Ω—ã–π –ø–æ—Ä—Ç, –Ω–∞—á–∏–Ω–∞—è —Å start_port"""
    for port in range(start_port, start_port + max_attempts):
        try:
            with socketserver.TCPServer(('', port), DevRequestHandler):
                return port
        except OSError:
            continue
    return None

def print_server_info(port, root_dir):
    """–í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—É—â–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ"""
    print("\n" + "=" * 50)
    print(f"üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω".center(50))
    print("=" * 50)
    
    print(f"\nüìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {root_dir}")
    print(f"\nüåê –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–¥—Ä–µ—Å–∞:")
    
    for ip in get_local_ips():
        print(f"  ‚Üí http://{ip}:{port}")
    
    if 'localhost' in get_local_ips():
        print("\nüîó –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è —Å—Å—ã–ª–∫–∞: http://localhost:{port}")
    
    print("\n‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print(f"  - CORS: {'–≤–∫–ª—é—á–µ–Ω–æ' if DevRequestHandler.cors_enabled else '–≤—ã–∫–ª—é—á–µ–Ω–æ'}")
    print(f"  - SPA —Ä–µ–∂–∏–º: {'–≤–∫–ª—é—á–µ–Ω' if DevRequestHandler.spa_mode else '–≤—ã–∫–ª—é—á–µ–Ω'}")
    print(f"  - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ: {'–≤–∫–ª—é—á–µ–Ω–æ' if DevRequestHandler.verbose else '–≤—ã–∫–ª—é—á–µ–Ω–æ'}")
    
    print("\n‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("=" * 50 + "\n")

def main():
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞
    DEFAULT_PORT = 3000
    MAX_PORT_ATTEMPTS = 100
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    root_dir = Path(__file__).parent.absolute()
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–æ —Å–∫—Ä–∏–ø—Ç–æ–º
    os.chdir(root_dir)
    
    # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Å–≤–æ–±–æ–¥–Ω—ã–π –ø–æ—Ä—Ç
    port = find_free_port(DEFAULT_PORT, MAX_PORT_ATTEMPTS)
    if port is None:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–≤–æ–±–æ–¥–Ω—ã–π –ø–æ—Ä—Ç –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ {DEFAULT_PORT}-{DEFAULT_PORT+MAX_PORT_ATTEMPTS-1}")
        sys.exit(1)
    
    # –°–æ–∑–¥–∞–µ–º HTTP —Å–µ—Ä–≤–µ—Ä
    try:
        with socketserver.TCPServer(("", port), DevRequestHandler) as httpd:
            # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ
            print_server_info(port, root_dir)
            
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
            try:
                webbrowser.open(f"http://localhost:{port}")
            except:
                print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
            try:
                httpd.serve_forever()
            except KeyboardInterrupt:
                print("\nüõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                sys.exit(0)
                
    except OSError as e:
        if e.errno == 48:  # Address already in use
            print(f"‚ùå –û—à–∏–±–∫–∞: –ü–æ—Ä—Ç {port} —É–∂–µ –∑–∞–Ω—è—Ç!")
            print(f"üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø–æ—Ä—Ç –∏–ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞ –ø–æ—Ä—Ç—É {port}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
